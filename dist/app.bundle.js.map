{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Station_MIR.obj","webpack:///./node_modules/three/build/three.module.js","webpack:///./src/Detector.js","webpack:///./src/CopyShader.js","webpack:///./src/StaticShader.js","webpack:///./src/Pass.js","webpack:///./src/RenderPass.js","webpack:///./src/ShaderPass.js","webpack:///./src/MaskPass.js","webpack:///./src/EffectComposer.js","webpack:///./src/stats.min.js","webpack:///./src/index.js","webpack:///./src/OBJLoader.js","webpack:///./src/FirstPersonControls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","EventDispatcher","Number","EPSILON","Math","pow","isInteger","isFinite","floor","sign","x","Function","this","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","min","max","vector","matrix","y","z","zero","one","v1","quaternion","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","console","error","Quaternion","w","_x","_y","_z","_w","Vector3","Matrix3","defineProperties","width","set","height","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","warn","addVectors","addScalar","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","closestPoint","box","p1","p2","sphere","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","undefined","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","data","Box3","Infinity","Sphere","Plane","constant","Frustum","p0","p3","p4","p5","planes","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","canvas","HTMLCanvasElement","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","xax","xay","xaz","xbx","xby","xbz","yax","yay","yaz","ybx","yby","ybz","zax","zay","zaz","zbx","zby","zbz","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","hsl","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_pars_maps","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","Array","isArray","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","q1","object3DId","Object3D","parent","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","Face3","materialIndex","vertexNormals","vertexColors","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","remove","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","serialize","library","element","JSON","stringify","parameters","shape","material","uuids","extractFromCache","cache","values","recursive","parse","child","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","obj","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","dynamic","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","isMesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","onUploadCallback","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","isInterleavedBufferAttribute","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","isPoints","isLine","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","keys","morphAttribute","segCenter","segDir","startP","startEnd","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","MeshBasicMaterial","combine","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","setValues","ShaderMaterial","defines","linewidth","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Line3","Triangle","Mesh","drawMode","updateMorphTargets","absNumericalSort","CubeTexture","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isMeshBasicMaterial","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","edgeList","projectedPoint","minDistance","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","renderer","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","lines","split","join","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLPrograms","capabilities","programs","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","maxBones","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getMaxPrecision","currentRenderTarget","getRenderTarget","supportsVertexTextures","vertexTextures","outputEncoding","gammaOutput","mapEncoding","gammaInput","envMapMode","envMapEncoding","envMapCubeUV","emissiveMapEncoding","useFog","fogExp","isFogExp2","logarithmicDepthBuffer","useVertexTexture","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMapEnabled","shadowMap","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","depthPacking","getProgramCode","acquireProgram","code","pl","programInfo","usedTimes","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","filter","customDefines","chunks","createProgram","isRawShaderMaterial","toneMappingName","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","destroy","deleteProgram","releaseProgram","pop","painterSortStable","reversePainterSortStable","intersectPoint","worldPosition","worldScale","matrixPosition","offsetMatrix","identityMatrix","WebGLRenderStates","renderStates","scene","renderState","light","halfWidth","halfHeight","state","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","lightsArray","shadowsArray","spritesArray","init","setupLights","pushLight","pushShadow","shadowLight","pushSprite","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","result","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","groupMaterial","renderBufferDirect","autoUpdate","render","faceCount","_gl","_state","BLEND","buffers","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","CanvasTexture","WebGLSpriteRenderer","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","uvOffset","uvScale","fogType","fogDepth","fillStyle","fillRect","sprites","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","CULL_FACE","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","density","setBlending","setMask","drawElements","TRIANGLES","UNSIGNED_SHORT","reset","WebGLTextures","utils","_canvas","_isWebGL2","WebGL2RenderingContext","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","filterFallback","NEAREST","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","HTMLImageElement","ImageBitmap","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","textureType","extension","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isCube","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","webglDepthTexture","createRenderbuffer","setupDepthRenderbuffer","updateRenderTargetMipmap","webglTexture","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","device","frameData","poseTarget","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","userHeight","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLRenderer","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","background","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","maxAnisotropy","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","clearColor","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisorANGLE","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setMaterial","frontFaceCW","setLineWidth","lineWidth","SCISSOR_TEST","webglType","boundTexture","apply","calls","triangles","autoReset","instanceCount","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","WeakMap","delete","deleteBuffer","buffer","bufferType","usage","DYNAMIC_DRAW","bytesPerElement","BYTES_PER_ELEMENT","bufferSubData","subarray","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","lists","list","renderItems","renderItemsIndex","opaque","renderItem","planeCamera","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","drawArraysInstancedANGLE","maxInstancedCount","drawElementsInstancedANGLE","vr","navigator","session","frameOfRef","updateCamera","setCompatibleXRDevice","setSession","setFramebuffer","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","then","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","THREE","preventDefault","onMaterialDispose","releaseMaterialProgramReference","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","compile","isLight","initMaterial","warned","renderObjects","overrideMaterial","isArrayCamera","camera2","isImmediateRenderObject","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","refreshUniformsCommon","isMeshToonMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsStandard","isMeshDepthMaterial","isLineBasicMaterial","isLineDashedMaterial","isPointsMaterial","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","isSprite","opaqueObjects","transparentObjects","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","CompressedTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","centroid","azi","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isCanvasTexture","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","isSpriteMaterial","guessSizeSq","addLevel","getObjectForDistance","bone","isBone","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","isGroup","readyState","HAVE_CURRENT_DATA","linkedList","dim","clockwise","last","sum","insertNode","removeNode","filterPoints","again","steiner","three_module_area","prev","earcutLinked","ear","invSize","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","compareX","eliminateHole","hole","outerNode","hx","hy","mx","my","tanMin","getLeftmost","leftmost","px","py","inside","q2","Node","an","bp","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","holeIndices","removeDupEndPts","addContour","holeIndex","forEach","hasHoles","outerLen","queue","Earcut","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","ImageLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","CubicBezier","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","QuaternionLinearInterpolant","QuaternionKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","getValueSize","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","BlendingMode","textureLoader","materialLoader","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","lastIndexOf","JSONLoader","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","influencesPerVertex","dstVertices","srcVertices","morphColors","outputAnimations","morphAnimationClips","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","three_module_context","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","instance","eyeSep","eyeRight","eyeLeft","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","lineGeometry","coneGeometry","three_module_AudioContext","AudioContext","webkitAudioContext","AudioLoader","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","Spline","decodeAudioData","audioBuffer","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","RegExp","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","PointCloud","setFromCamera","coords","intersectObjects","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","Detector","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","workers","Worker","fileapi","File","FileReader","FileList","getWebGLErrorMessage","fontFamily","fontSize","fontWeight","textAlign","padding","margin","innerHTML","addGetWebGLMessage","body","appendChild","src_Detector","Bs","src_CopyShader","tDiffuse","src_StaticShader","pixelSize","Pass","needsSwap","renderToScreen","writeBuffer","readBuffer","maskActive","src_Pass","Ws","RenderPass","oldClearColor","oldClearAlpha","oldAutoClear","src_RenderPass","qs","ShaderPass","textureID","quad","src_ShaderPass","$s","MaskPass","writeValue","clearValue","REPLACE","KEEP","ClearMaskPass","EffectComposer","renderTarget1","renderTarget2","passes","copyPass","swapBuffers","addPass","insertPass","src_EffectComposer","nA","Stats","dom","display","cssText","Panel","self","addPanel","showPanel","begin","usedJSHeapSize","jsHeapSizeLimit","devicePixelRatio","textBaseline","fillText","globalAlpha","src_container","src_camera","controls","src_scene","src_renderer","composer","staticPass","stats_min","MA","src_OBJLoader","object_pattern","material_library_pattern","material_use_pattern","OBJLoader","setMaterials","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","smooth","startMaterial","libraries","previous","inherited","mtllib","groupEnd","cloned","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertexPoint","addVertexLine","addNormal","addColor","addUVLine","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","vi","addLineGeometry","uvi","lineFirstChar","trimLeft","vertexData","faceVertices","vertexParts","lineParts","lineVertices","lineUVs","li","llen","pointData","hasVertexColors","createdMaterials","miLen","sourceMaterial","materialPoints","materialLine","timeEnd","lA","getElementById","clock","soundObjects","distances","soundSrcs","onkeydown","keyCode","masterVol","linearRampToValueAtTime","audioContext","pinkNoise","b3","b4","b5","b6","createScriptProcessor","onaudioprocess","outputBuffer","getChannelData","noiseVol","loadSound","pathArray","arrayBuffer","sourceNode","sourceVol","innerWidth","innerHeight","contextmenu","movementSpeed","lookSpeed","lookVertical","autoForward","activeLook","heightSpeed","heightCoef","heightMin","heightMax","constrainVertical","verticalMin","verticalMax","autoSpeedFactor","mouseX","mouseY","lat","lon","moveForward","moveBackward","moveLeft","moveRight","mouseDragOn","viewHalfX","viewHalfY","setAttribute","handleResize","offsetWidth","offsetHeight","onMouseDown","stopPropagation","button","onMouseUp","onMouseMove","pageX","pageY","offsetLeft","offsetTop","onKeyDown","moveUp","moveDown","onKeyUp","heightDelta","actualMoveSpeed","actualLookSpeed","verticalLookRatio","targetPosition","_onMouseDown","_onMouseMove","_onMouseUp","_onKeyDown","_onKeyUp","fn","Station_MIR_default","xhr","baseSize","geometry1","geometry3","sphere1","sphere2","sphere3","onWindowResize","maxRedVal","blueVal","redVal","greenVal"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = \"data:application/x-tgif;base64,\"","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '93';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty( ) ) return this;\n\n\t\tvar m = matrix.elements;\n\n\t\tvar xax = m[ 0 ] * this.min.x, xay = m[ 1 ] * this.min.x, xaz = m[ 2 ] * this.min.x;\n\t\tvar xbx = m[ 0 ] * this.max.x, xby = m[ 1 ] * this.max.x, xbz = m[ 2 ] * this.max.x;\n\t\tvar yax = m[ 4 ] * this.min.y, yay = m[ 5 ] * this.min.y, yaz = m[ 6 ] * this.min.y;\n\t\tvar ybx = m[ 4 ] * this.max.y, yby = m[ 5 ] * this.max.y, ybz = m[ 6 ] * this.max.y;\n\t\tvar zax = m[ 8 ] * this.min.z, zay = m[ 9 ] * this.min.z, zaz = m[ 10 ] * this.min.z;\n\t\tvar zbx = m[ 8 ] * this.max.z, zby = m[ 9 ] * this.max.z, zbz = m[ 10 ] * this.max.z;\n\n\t\tthis.min.x = Math.min( xax, xbx ) + Math.min( yax, ybx ) + Math.min( zax, zbx ) + m[ 12 ];\n\t\tthis.min.y = Math.min( xay, xby ) + Math.min( yay, yby ) + Math.min( zay, zby ) + m[ 13 ];\n\t\tthis.min.z = Math.min( xaz, xbz ) + Math.min( yaz, ybz ) + Math.min( zaz, zbz ) + m[ 14 ];\n\t\tthis.max.x = Math.max( xax, xbx ) + Math.max( yax, ybx ) + Math.max( zax, zbx ) + m[ 12 ];\n\t\tthis.max.y = Math.max( xay, xby ) + Math.max( yay, yby ) + Math.max( zay, zby ) + m[ 13 ];\n\t\tthis.max.z = Math.max( xaz, xbz ) + Math.max( yaz, ybz ) + Math.max( zaz, zbz ) + m[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy *= normalScale;\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_pars_maps: lights_pars_maps,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\ttarget.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\ttarget.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( shadowLight ) {\n\n\t\tspritesArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext ); /* global WebGL2RenderingContext */\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfRef = null;\n\n\tvar pose = null;\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfRef !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tgl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tthis.setSession = function ( value, options ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'end', function () {\n\n\t\t\t\trenderer.setFramebuffer( null );\n\t\t\t\tanimation.stop();\n\n\t\t\t} );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfRef = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfRef );\n\n\t\tvar layer = session.baseLayer;\n\t\tvar views = frame.views;\n\n\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\tvar view = views[ i ];\n\t\t\tvar viewport = layer.getViewport( view );\n\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t// HACK (mrdoob)\n\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback();\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame() {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback();\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\tanimation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && curve.isLineCurve ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, divisions, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, divisions, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, divisions, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, divisions, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nlet Detector = {\n  canvas: !!window.CanvasRenderingContext2D,\n  webgl: (function() {\n    try {\n      var canvas = document.createElement('canvas');\n      return !!(\n        window.WebGLRenderingContext &&\n        (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n      );\n    } catch (e) {\n      return false;\n    }\n  })(),\n  workers: !!window.Worker,\n  fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n  getWebGLErrorMessage: function() {\n    var element = document.createElement('div');\n    element.id = 'webgl-error-message';\n    element.style.fontFamily = 'monospace';\n    element.style.fontSize = '13px';\n    element.style.fontWeight = 'normal';\n    element.style.textAlign = 'center';\n    element.style.background = '#fff';\n    element.style.color = '#000';\n    element.style.padding = '1.5em';\n    element.style.width = '400px';\n    element.style.margin = '5em auto 0';\n\n    if (!this.webgl) {\n      element.innerHTML = window.WebGLRenderingContext\n        ? [\n            'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.',\n          ].join('\\n')\n        : [\n            'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.',\n          ].join('\\n');\n    }\n\n    return element;\n  },\n\n  addGetWebGLMessage: function(parameters) {\n    var parent, id, element;\n\n    parameters = parameters || {};\n\n    parent =\n      parameters.parent !== undefined ? parameters.parent : document.body;\n    id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n    element = Detector.getWebGLErrorMessage();\n    element.id = id;\n\n    parent.appendChild(element);\n  },\n};\n\nexport default Detector;\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nlet CopyShader = {\n  uniforms: {\n    tDiffuse: {value: null},\n    opacity: {value: 1.0},\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    'vUv = uv;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float opacity;',\n\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    'vec4 texel = texture2D( tDiffuse, vUv );',\n    'gl_FragColor = opacity * texel;',\n\n    '}',\n  ].join('\\n'),\n};\n\nexport default CopyShader;\n","let StaticShader = {\n  uniforms: {\n    tDiffuse: {value: null},\n    resolution: {value: null},\n    pixelSize: {value: 1},\n  },\n\n  vertexShader: [\n    'void main() {',\n\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform sampler2D tDiffuse;',\n    'uniform float pixelSize;',\n    'uniform float time;',\n    'uniform vec2 resolution;',\n\n    'float rand(vec2 co){',\n    '    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);',\n    '}',\n\n    'void main(){',\n\n    'vec2 dxy = 2.0 / resolution;',\n    'vec2 position = ( gl_FragCoord.xy / resolution.xy );',\n    'vec2 coord = dxy * floor( position / dxy );',\n    'vec4 color = texture2D(tDiffuse, coord);',\n    'color = texture2D(tDiffuse, coord);',\n    'float noise = rand(vec2(time*coord.x, time*coord.y)) - 0.7;',\n    'color += noise;',\n    'gl_FragColor = color;',\n\n    '}',\n  ].join('\\n'),\n};\n\nexport default StaticShader;\n","let Pass = function() {\n  // if set to true, the pass is processed by the composer\n  this.enabled = true;\n\n  // if set to true, the pass indicates to swap read and write buffer after rendering\n  this.needsSwap = true;\n\n  // if set to true, the pass clears its buffer before rendering\n  this.clear = false;\n\n  // if set to true, the result of the pass is rendered to screen\n  this.renderToScreen = false;\n};\n\nObject.assign(Pass.prototype, {\n  setSize: function(width, height) {},\n\n  render: function(renderer, writeBuffer, readBuffer, delta, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.');\n  },\n});\n\nexport default Pass;\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from 'three';\nimport Pass from './Pass';\n\nlet RenderPass = function(\n  scene,\n  camera,\n  overrideMaterial,\n  clearColor,\n  clearAlpha,\n) {\n  Pass.call(this);\n\n  this.scene = scene;\n  this.camera = camera;\n\n  this.overrideMaterial = overrideMaterial;\n\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n};\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: RenderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, delta, maskActive) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n\n    this.scene.overrideMaterial = this.overrideMaterial;\n\n    var oldClearColor, oldClearAlpha;\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex();\n      oldClearAlpha = renderer.getClearAlpha();\n\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.render(\n      this.scene,\n      this.camera,\n      this.renderToScreen ? null : readBuffer,\n      this.clear,\n    );\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.autoClear = oldAutoClear;\n  },\n});\n\nexport default RenderPass;\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from 'three';\nimport Pass from './Pass';\n\nlet ShaderPass = function(shader, textureID) {\n  Pass.call(this);\n\n  this.textureID = textureID !== undefined ? textureID : 'tDiffuse';\n\n  if (shader instanceof THREE.ShaderMaterial) {\n    this.uniforms = shader.uniforms;\n\n    this.material = shader;\n  } else if (shader) {\n    this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n\n    this.material = new THREE.ShaderMaterial({\n      defines: Object.assign({}, shader.defines),\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n    });\n  }\n\n  this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new THREE.Scene();\n\n  this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n  this.scene.add(this.quad);\n};\n\nShaderPass.prototype = Object.assign(\n  Object.create(Pass.prototype),\n  {\n    constructor: ShaderPass,\n\n    render: function(renderer, writeBuffer, readBuffer, delta, maskActive) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n\n      this.quad.material = this.material;\n\n      if (this.renderToScreen) {\n        renderer.render(this.scene, this.camera);\n      } else {\n        renderer.render(this.scene, this.camera, writeBuffer, this.clear);\n      }\n    },\n  },\n);\n\nexport default ShaderPass;\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport Pass from './Pass';\n\nlet MaskPass = function(scene, camera) {\n  Pass.call(this);\n\n  this.scene = scene;\n  this.camera = camera;\n\n  this.clear = true;\n  this.needsSwap = false;\n\n  this.inverse = false;\n};\n\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: MaskPass,\n\n  render: function(renderer, writeBuffer, readBuffer, delta, maskActive) {\n    var context = renderer.context;\n    var state = renderer.state;\n\n    // don't update color or depth\n\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false);\n\n    // lock buffers\n\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true);\n\n    // set up stencil\n\n    var writeValue, clearValue;\n\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(\n      context.REPLACE,\n      context.REPLACE,\n      context.REPLACE,\n    );\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n    state.buffers.stencil.setClear(clearValue);\n\n    // draw into the stencil buffer\n\n    renderer.render(this.scene, this.camera, readBuffer, this.clear);\n    renderer.render(this.scene, this.camera, writeBuffer, this.clear);\n\n    // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false);\n\n    // only render where stencil is set to 1\n\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n  },\n});\n\nlet ClearMaskPass = function() {\n  Pass.call(this);\n\n  this.needsSwap = false;\n};\n\nClearMaskPass.prototype = Object.create(Pass.prototype);\n\nObject.assign(ClearMaskPass.prototype, {\n  render: function(renderer, writeBuffer, readBuffer, delta, maskActive) {\n    renderer.state.buffers.stencil.setTest(false);\n  },\n});\n\nexport {MaskPass, ClearMaskPass};\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from 'three';\nimport CopyShader from './CopyShader';\nimport ShaderPass from './ShaderPass';\nimport Pass from './Pass';\nimport {MaskPass, ClearMaskPass} from './MaskPass';\n\nlet EffectComposer = function(renderer, renderTarget) {\n  this.renderer = renderer;\n\n  if (renderTarget === undefined) {\n    var parameters = {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      format: THREE.RGBAFormat,\n      stencilBuffer: false,\n    };\n\n    var size = renderer.getDrawingBufferSize();\n    renderTarget = new THREE.WebGLRenderTarget(\n      size.width,\n      size.height,\n      parameters,\n    );\n    renderTarget.texture.name = 'EffectComposer.rt1';\n  }\n\n  this.renderTarget1 = renderTarget;\n  this.renderTarget2 = renderTarget.clone();\n  this.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n  this.writeBuffer = this.renderTarget1;\n  this.readBuffer = this.renderTarget2;\n\n  this.passes = [];\n\n  // dependencies\n\n  if (CopyShader === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.CopyShader');\n  }\n\n  if (ShaderPass === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.ShaderPass');\n  }\n\n  this.copyPass = new ShaderPass(CopyShader);\n};\n\nObject.assign(EffectComposer.prototype, {\n  swapBuffers: function() {\n    var tmp = this.readBuffer;\n    this.readBuffer = this.writeBuffer;\n    this.writeBuffer = tmp;\n  },\n\n  addPass: function(pass) {\n    this.passes.push(pass);\n\n    var size = this.renderer.getDrawingBufferSize();\n    pass.setSize(size.width, size.height);\n  },\n\n  insertPass: function(pass, index) {\n    this.passes.splice(index, 0, pass);\n  },\n\n  render: function(delta) {\n    var maskActive = false;\n\n    var pass,\n      i,\n      il = this.passes.length;\n\n    for (i = 0; i < il; i++) {\n      pass = this.passes[i];\n\n      if (pass.enabled === false) continue;\n\n      pass.render(\n        this.renderer,\n        this.writeBuffer,\n        this.readBuffer,\n        delta,\n        maskActive,\n      );\n\n      if (pass.needsSwap) {\n        if (maskActive) {\n          var context = this.renderer.context;\n\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\n\n          this.copyPass.render(\n            this.renderer,\n            this.writeBuffer,\n            this.readBuffer,\n            delta,\n          );\n\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff);\n        }\n\n        this.swapBuffers();\n      }\n\n      if (MaskPass !== undefined) {\n        if (pass instanceof MaskPass) {\n          maskActive = true;\n        } else if (pass instanceof ClearMaskPass) {\n          maskActive = false;\n        }\n      }\n    }\n  },\n\n  reset: function(renderTarget) {\n    if (renderTarget === undefined) {\n      var size = this.renderer.getDrawingBufferSize();\n\n      renderTarget = this.renderTarget1.clone();\n      renderTarget.setSize(size.width, size.height);\n    }\n\n    this.renderTarget1.dispose();\n    this.renderTarget2.dispose();\n    this.renderTarget1 = renderTarget;\n    this.renderTarget2 = renderTarget.clone();\n\n    this.writeBuffer = this.renderTarget1;\n    this.readBuffer = this.renderTarget2;\n  },\n\n  setSize: function(width, height) {\n    this.renderTarget1.setSize(width, height);\n    this.renderTarget2.setSize(width, height);\n\n    for (var i = 0; i < this.passes.length; i++) {\n      this.passes[i].setSize(width, height);\n    }\n  },\n});\n\nexport default EffectComposer;\n","// stats.js - http://github.com/mrdoob/stats.js\nlet Stats = function() {\n  function h(a) {\n    c.appendChild(a.dom);\n    return a;\n  }\n  function k(a) {\n    for (var d = 0; d < c.children.length; d++)\n      c.children[d].style.display = d === a ? 'block' : 'none';\n    l = a;\n  }\n  var l = 0,\n    c = document.createElement('div');\n  c.style.cssText =\n    'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n  c.addEventListener(\n    'click',\n    function(a) {\n      a.preventDefault();\n      k(++l % c.children.length);\n    },\n    !1,\n  );\n  var g = (performance || Date).now(),\n    e = g,\n    a = 0,\n    r = h(new Stats.Panel('FPS', '#0ff', '#002')),\n    f = h(new Stats.Panel('MS', '#0f0', '#020'));\n  if (self.performance && self.performance.memory)\n    var t = h(new Stats.Panel('MB', '#f08', '#201'));\n  k(0);\n  return {\n    REVISION: 16,\n    dom: c,\n    addPanel: h,\n    showPanel: k,\n    begin: function() {\n      g = (performance || Date).now();\n    },\n    end: function() {\n      a++;\n      var c = (performance || Date).now();\n      f.update(c - g, 200);\n      if (\n        c > e + 1e3 &&\n        (r.update((1e3 * a) / (c - e), 100), (e = c), (a = 0), t)\n      ) {\n        var d = performance.memory;\n        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n      }\n      return c;\n    },\n    update: function() {\n      g = this.end();\n    },\n    domElement: c,\n    setMode: k,\n  };\n};\nStats.Panel = function(h, k, l) {\n  var c = Infinity,\n    g = 0,\n    e = Math.round,\n    a = e(window.devicePixelRatio || 1),\n    r = 80 * a,\n    f = 48 * a,\n    t = 3 * a,\n    u = 2 * a,\n    d = 3 * a,\n    m = 15 * a,\n    n = 74 * a,\n    p = 30 * a,\n    q = document.createElement('canvas');\n  q.width = r;\n  q.height = f;\n  q.style.cssText = 'width:80px;height:48px';\n  var b = q.getContext('2d');\n  b.font = 'bold ' + 9 * a + 'px Helvetica,Arial,sans-serif';\n  b.textBaseline = 'top';\n  b.fillStyle = l;\n  b.fillRect(0, 0, r, f);\n  b.fillStyle = k;\n  b.fillText(h, t, u);\n  b.fillRect(d, m, n, p);\n  b.fillStyle = l;\n  b.globalAlpha = 0.9;\n  b.fillRect(d, m, n, p);\n  return {\n    dom: q,\n    update: function(f, v) {\n      c = Math.min(c, f);\n      g = Math.max(g, f);\n      b.fillStyle = l;\n      b.globalAlpha = 1;\n      b.fillRect(0, 0, r, m);\n      b.fillStyle = k;\n      b.fillText(e(f) + ' ' + h + ' (' + e(c) + '-' + e(g) + ')', t, u);\n      b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n      b.fillRect(d + n - a, m, a, p);\n      b.fillStyle = l;\n      b.globalAlpha = 0.9;\n      b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n    },\n  };\n};\nexport default Stats;\n","import * as THREE from 'three';\nimport Detector from './Detector';\nimport FirstPersonControls from './FirstPersonControls';\nimport ImprovedNoise from './ImprovedNoise';\nimport CopyShader from './CopyShader';\nimport StaticShader from './StaticShader';\nimport RenderPass from './RenderPass';\nimport ShaderPass from './ShaderPass';\nimport EffectComposer from './EffectComposer';\nimport Stats from './stats.min';\nimport OBJLoader from './OBJLoader';\nimport mir from './Station_MIR.obj';\n/*\nimport tr1 from './rs_urss_vapey_badradio.mp3';\nimport tr2 from './shosta01_funeral_fromspace.mp3';\nimport tr3 from './shosta_badradio.mp3';\nimport tr4 from './shosta_elegy_transmit.mp3';\nimport tr5 from './urss_vapey_forum.mp3';\nimport tr6 from './urss_vapey_push_button.mp3';\nimport tr7 from './RE-SET_Audio_Lena_Radio_En_processed01.wav';\nimport tr8 from './RE-SET_Audio_Lena_Radio_Rus_processed01.wav';\nimport tr9 from './RE-SET_Audio_Maggie_Radio_Eng_processed01.wav';\nimport tr10 from './RE-SET_Audio_Serguei_Radio_En_processed01.wav';\nimport tr11 from './RE-SET_Audio_Volkov_Radio_Rus_processed01.wav';\n*/\nif (!Detector.webgl) {\n  Detector.addGetWebGLMessage();\n  document.getElementById('container').innerHTML = '';\n}\n\nvar container, stats;\nvar camera, gui, controls, scene, renderer, composer;\nvar staticPass, params;\nvar group;\nvar mesh, texture;\nvar worldWidth = 256,\n  worldDepth = 256,\n  worldHalfWidth = worldWidth / 2,\n  worldHalfDepth = worldDepth / 2;\nvar clock = new THREE.Clock();\n\nlet soundObjects = [];\nlet distances = [];\nlet maxDistance = 100;\n\nlet soundSrcs = [];\n\nwindow.onkeydown = function(event) {\n  if (event.keyCode === 32) {\n    event.preventDefault();\n    document.getElementById('info').style.display = 'none';\n    masterVol.gain.linearRampToValueAtTime(1, audioContext.currentTime + 4);\n  }\n};\n\nlet audioContext = new AudioContext();\nvar bufferSize = 4096;\nvar pinkNoise = (function() {\n  var b0, b1, b2, b3, b4, b5, b6;\n  b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n  var node = audioContext.createScriptProcessor(bufferSize, 1, 1);\n  node.onaudioprocess = function(e) {\n    var output = e.outputBuffer.getChannelData(0);\n    for (var i = 0; i < bufferSize; i++) {\n      var white = Math.random() * 2 - 1;\n      b0 = 0.99886 * b0 + white * 0.0555179;\n      b1 = 0.99332 * b1 + white * 0.0750759;\n      b2 = 0.969 * b2 + white * 0.153852;\n      b3 = 0.8665 * b3 + white * 0.3104856;\n      b4 = 0.55 * b4 + white * 0.5329522;\n      b5 = -0.7616 * b5 - white * 0.016898;\n      output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n      output[i] *= 0.11; // (roughly) compensate for gain\n      b6 = white * 0.115926;\n    }\n  };\n  return node;\n})();\n\nlet masterVol = audioContext.createGain();\nlet noiseVol = audioContext.createGain();\nmasterVol.connect(audioContext.destination);\nmasterVol.gain.setValueAtTime(0, audioContext.currentTime);\nnoiseVol.connect(masterVol);\n\npinkNoise.connect(noiseVol);\n\nconst loadSound = pathArray => {\n  console.log(pathArray.length);\n  console.log(soundSrcs);\n  if (pathArray.length > 0) {\n    fetch(pathArray.pop())\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => audioContext.decodeAudioData(arrayBuffer))\n      .then(audioBuffer => {\n        let sourceNode = audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        let sourceVol = audioContext.createGain();\n        sourceVol.connect(masterVol);\n        sourceNode.connect(sourceVol);\n        sourceNode.loop = true;\n        sourceVol.gain.setValueAtTime(0, audioContext.currentTime);\n        soundSrcs.push({sourceNode, sourceVol});\n        sourceNode.start();\n      })\n      .then(loadSound(pathArray))\n      .catch(e => console.error(e));\n  } else {\n    init();\n    animate();\n  }\n};\n\nloadSound([\n  'https://u5mir.com/sndfiles/RE-SET_Audio_Serguei_Radio_En_processed01.wav',\n  'https://u5mir.com/sndfiles/RE-SET_Audio_Lena_Radio_En_processed01.wav',\n  'https://u5mir.com/sndfiles/RE-SET_Audio_Lena_Radio_Rus_processed01.wav',\n  'https://u5mir.com/sndfiles/RE-SET_Audio_Maggie_Radio_Eng_processed01.wav',\n  'https://u5mir.com/sndfiles/RE-SET_Audio_Volkov_Radio_Rus_processed01.wav',\n  'https://u5mir.com/sndfiles/rs_urss_vapey_badradio.mp3',\n  'https://u5mir.com/sndfiles/shosta01_funeral_fromspace.mp3',\n  'https://u5mir.com/sndfiles/shosta_badradio.mp3',\n  'https://u5mir.com/sndfiles/shosta_elegy_transmit.mp3',\n  'https://u5mir.com/sndfiles/urss_vapey_forum.mp3',\n  'https://u5mir.com/sndfiles/urss_vapey_push_button.mp3',\n]);\n\nfunction init() {\n  container = document.getElementById('container');\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    10000,\n  );\n  controls = new FirstPersonControls(camera);\n  controls.movementSpeed = 50;\n  controls.lookSpeed = 0.1;\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0x000000);\n  scene.fog = new THREE.FogExp2(0x000000, 0.0025);\n  var light = new THREE.PointLight();\n  light.position.set(100, 100, 100);\n  scene.add(light);\n\n  // instantiate a loader\n  var loader = new OBJLoader();\n\n  // load a resource\n  loader.load(\n    // resource URL\n    mir, // called when resource is loaded\n    function(object) {\n      scene.add(object);\n    },\n    // called when loading is in progresses\n    function(xhr) {\n      console.log((xhr.loaded / xhr.total) * 100 + '% loaded');\n    },\n    // called when loading has errors\n    function(error) {\n      console.log('An error happened');\n    },\n  );\n\n  //var data = generateHeight(worldWidth, worldDepth); // What's going on here?\n  /*\n  camera.position.y =\n    data[worldHalfWidth + worldHalfDepth * worldWidth] * 10 + 500;\n    */\n  //camera.position.y = worldHalfWidth + worldHalfDepth * worldWidth * 10 + 500;\n  /*\n  var geometry = new THREE.PlaneBufferGeometry(\n    7500,\n    7500,\n    worldWidth - 1,\n    worldDepth - 1,\n  );\n  geometry.rotateX(-Math.PI / 2);\n  var vertices = geometry.attributes.position.array;\n  for (var i = 0, j = 0, l = vertices.length; i < l; i++, j += 3) {\n    vertices[j + 1] = data[i] * 10;\n  }\n  texture = new THREE.CanvasTexture(\n    generateTexture(data, worldWidth, worldDepth),\n  );\n  texture.wrapS = THREE.ClampToEdgeWrapping;\n  texture.wrapT = THREE.ClampToEdgeWrapping;\n  mesh = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({map: texture}));\n  scene.add(mesh);\n  */\n\n  for (let i = 0; i < 11; i++) {\n    let baseSize = 0.5 + Math.random() * 4;\n    let geometry1 = new THREE.SphereGeometry(baseSize, 32, 32);\n    let geometry2 = new THREE.SphereGeometry(2 * baseSize, 32, 32);\n    let geometry3 = new THREE.SphereGeometry(3 * baseSize, 32, 32);\n    let material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      opacity: 0.65,\n      transparent: true,\n    });\n    let sphere1 = new THREE.Mesh(geometry1, material);\n    let sphere2 = new THREE.Mesh(geometry2, material);\n    let sphere3 = new THREE.Mesh(geometry3, material);\n    scene.add(sphere1);\n    scene.add(sphere2);\n    scene.add(sphere3);\n    let position =\n      i > 5\n        ? new THREE.Vector3(\n            -worldWidth * 1.5 + Math.random() * 4 * worldWidth,\n            -200 + Math.random() * 200,\n            -worldDepth * 1.5 + Math.random() * 4 * worldDepth,\n          )\n        : new THREE.Vector3(\n            -worldWidth * 0.5 + Math.random() * worldWidth,\n            -200 + Math.random() * 200,\n            -worldDepth * 0.5 + Math.random() * worldDepth,\n          );\n    sphere1.position.set(position.x, position.y, position.z);\n    sphere2.position.set(position.x, position.y, position.z);\n    sphere3.position.set(position.x, position.y, position.z);\n    sphere3.material.color.set(0x0000ff);\n    soundObjects.push({position, material});\n  }\n  renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  container.innerHTML = '';\n  container.appendChild(renderer.domElement);\n  stats = new Stats();\n  container.appendChild(stats.dom);\n\n  composer = new EffectComposer(renderer);\n  composer.addPass(new RenderPass(scene, camera));\n  /*\n  pixelPass = new ShaderPass(StaticShader);\n  pixelPass.uniforms.resolution.value = new THREE.Vector2(\n    window.innerWidth,\n    window.innerHeight,\n  );\n  pixelPass.uniforms.resolution.value.multiplyScalar(window.devicePixelRatio);\n  pixelPass.renderToScreen = true;\n  composer.addPass(pixelPass);\n  pixelPass.uniforms.pixelSize.value = 10;\n  */\n  staticPass = new ShaderPass(StaticShader);\n  staticPass.uniforms.resolution.value = new THREE.Vector2(\n    window.innerWidth,\n    window.innerHeight,\n  );\n  staticPass.uniforms.time = {type: 'f', value: 1.0};\n  staticPass.uniforms.resolution.value.multiplyScalar(window.devicePixelRatio);\n  staticPass.renderToScreen = true;\n  composer.addPass(staticPass);\n  window.addEventListener('resize', onWindowResize, false);\n}\nfunction onWindowResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  controls.handleResize();\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  render();\n  stats.update();\n}\nfunction render() {\n  if (soundSrcs.length > 0 && soundObjects.length > 0) {\n    controls.update(clock.getDelta());\n    let maxRedVal = 0;\n    for (let i = 0; i < soundSrcs.length; i++) {\n      distances[i] = camera.position.distanceTo(soundObjects[i].position);\n      let distanceVal = distances[i] > maxDistance ? maxDistance : distances[i];\n      let blueVal = distanceVal / maxDistance;\n      let redVal = 1 - blueVal;\n      let greenVal = (1 - blueVal) / 3;\n      if (redVal > maxRedVal) maxRedVal = redVal;\n      soundObjects[i].material.color.setRGB(redVal, greenVal, blueVal);\n      soundSrcs[i].sourceVol.gain.setValueAtTime(\n        redVal * 0.8,\n        audioContext.currentTime,\n      );\n      staticPass.uniforms.time.value += 0.05;\n    }\n    noiseVol.gain.setValueAtTime(\n      (1 - maxRedVal) * 0.8,\n      audioContext.currentTime,\n    );\n    //renderer.render(scene, camera);\n    composer.render();\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport * as THREE from 'three';\n\nlet OBJLoader = (function() {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/;\n  // mtllib file_reference\n  var material_library_pattern = /^mtllib /;\n  // usemtl material_name\n  var material_use_pattern = /^usemtl /;\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n\n      materialLibraries: [],\n\n      startObject: function(name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial =\n          this.object && typeof this.object.currentMaterial === 'function'\n            ? this.object.currentMaterial()\n            : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: [],\n          },\n          materials: [],\n          smooth: true,\n\n          startMaterial: function(name, libraries) {\n            var previous = this._finalize(false);\n\n            // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib:\n                Array.isArray(libraries) && libraries.length > 0\n                  ? libraries[libraries.length - 1]\n                  : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n\n              clone: function(index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false,\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              },\n            };\n\n            this.materials.push(material);\n\n            return material;\n          },\n\n          currentMaterial: function() {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n\n          _finalize: function(end) {\n            var lastMultiMaterial = this.currentMaterial();\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount =\n                lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            }\n\n            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            }\n\n            // Guarantee at least one empty material, this makes the creation later more straight forward.\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth,\n              });\n            }\n\n            return lastMultiMaterial;\n          },\n        };\n\n        // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (\n          previousMaterial &&\n          previousMaterial.name &&\n          typeof previousMaterial.clone === 'function'\n        ) {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n\n      finalize: function() {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n\n      parseVertexIndex: function(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n\n      parseNormalIndex: function(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n\n      parseUVIndex: function(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n\n      addVertex: function(a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addVertexPoint: function(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n\n      addVertexLine: function(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n\n      addNormal: function(a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addColor: function(a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addUV: function(a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n\n      addUVLine: function(a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n      },\n\n      addFace: function(a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n\n        this.addVertex(ia, ib, ic);\n\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n        }\n\n        if (na !== undefined && na !== '') {\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n\n          this.addNormal(ia, ib, ic);\n        }\n\n        if (this.colors.length > 0) {\n          this.addColor(ia, ib, ic);\n        }\n      },\n\n      addPointGeometry: function(vertices) {\n        this.object.geometry.type = 'Points';\n\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexPoint(this.parseVertexIndex(vertices[vi], vLen));\n        }\n      },\n\n      addLineGeometry: function(vertices, uvs) {\n        this.object.geometry.type = 'Line';\n\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      },\n    };\n\n    state.startObject('', false);\n\n    return state;\n  }\n\n  //\n\n  function OBJLoader(manager) {\n    this.manager =\n      manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = {\n    constructor: OBJLoader,\n\n    load: function(url, onLoad, onProgress, onError) {\n      var scope = this;\n\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(\n        url,\n        function(text) {\n          onLoad(scope.parse(text));\n        },\n        onProgress,\n        onError,\n      );\n    },\n\n    setPath: function(value) {\n      this.path = value;\n\n      return this;\n    },\n\n    setMaterials: function(materials) {\n      this.materials = materials;\n\n      return this;\n    },\n\n    parse: function(text) {\n      console.time('OBJLoader');\n\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n        lineFirstChar = '';\n      var lineLength = 0;\n      var result = [];\n\n      // Faster to just trim left side of the line. Use if available.\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n\n        line = trimLeft ? line.trimLeft() : line.trim();\n\n        lineLength = line.length;\n\n        if (lineLength === 0) continue;\n\n        lineFirstChar = line.charAt(0);\n\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3]),\n              );\n              if (data.length === 8) {\n                state.colors.push(\n                  parseFloat(data[4]),\n                  parseFloat(data[5]),\n                  parseFloat(data[6]),\n                );\n              }\n              break;\n            case 'vn':\n              state.normals.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3]),\n              );\n              break;\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = [];\n\n          // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          }\n\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          var v1 = faceVertices[0];\n\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n\n            state.addFace(\n              v1[0],\n              v2[0],\n              v3[0],\n              v1[1],\n              v2[1],\n              v3[1],\n              v1[2],\n              v2[2],\n              v3[2],\n            );\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line\n            .substring(1)\n            .trim()\n            .split(' ');\n          var lineVertices = [],\n            lineUVs = [];\n\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(' ');\n\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (' ' + result[0].substr(1).trim()).substr(1);\n\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n\n          state.object.startMaterial(\n            line.substring(7).trim(),\n            state.materialLibraries,\n          );\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (lineFirstChar === 's') {\n          result = line.split(' ');\n\n          // smooth shading\n\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n\n          throw new Error('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n\n      var container = new THREE.Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (var i = 0, l = state.objects.length; i < l; i++) {\n        var object = state.objects[i];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = geometry.type === 'Line';\n        var isPoints = geometry.type === 'Points';\n        var hasVertexColors = false;\n\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) continue;\n\n        var buffergeometry = new THREE.BufferGeometry();\n\n        buffergeometry.addAttribute(\n          'position',\n          new THREE.Float32BufferAttribute(geometry.vertices, 3),\n        );\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.addAttribute(\n            'normal',\n            new THREE.Float32BufferAttribute(geometry.normals, 3),\n          );\n        } else {\n          buffergeometry.computeVertexNormals();\n        }\n\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.addAttribute(\n            'color',\n            new THREE.Float32BufferAttribute(geometry.colors, 3),\n          );\n        }\n\n        if (geometry.uvs.length > 0) {\n          buffergeometry.addAttribute(\n            'uv',\n            new THREE.Float32BufferAttribute(geometry.uvs, 2),\n          );\n        }\n\n        // Create materials\n\n        var createdMaterials = [];\n\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          var sourceMaterial = materials[mi];\n          var material = undefined;\n\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name);\n\n            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n            if (\n              isLine &&\n              material &&\n              !(material instanceof THREE.LineBasicMaterial)\n            ) {\n              var materialLine = new THREE.LineBasicMaterial();\n              materialLine.copy(material);\n              materialLine.lights = false; // TOFIX\n              material = materialLine;\n            } else if (\n              isPoints &&\n              material &&\n              !(material instanceof THREE.PointsMaterial)\n            ) {\n              var materialPoints = new THREE.PointsMaterial({\n                size: 10,\n                sizeAttenuation: false,\n              });\n              materialLine.copy(material);\n              material = materialPoints;\n            }\n          }\n\n          if (!material) {\n            if (isLine) {\n              material = new THREE.LineBasicMaterial();\n            } else if (isPoints) {\n              material = new THREE.PointsMaterial({\n                size: 1,\n                sizeAttenuation: false,\n              });\n            } else {\n              material = new THREE.MeshPhongMaterial();\n            }\n\n            material.name = sourceMaterial.name;\n          }\n\n          material.flatShading = sourceMaterial.smooth ? false : true;\n          material.vertexColors = hasVertexColors\n            ? THREE.VertexColors\n            : THREE.NoColors;\n\n          createdMaterials.push(material);\n        }\n\n        // Create mesh\n\n        var mesh;\n\n        if (createdMaterials.length > 1) {\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            buffergeometry.addGroup(\n              sourceMaterial.groupStart,\n              sourceMaterial.groupCount,\n              mi,\n            );\n          }\n\n          if (isLine) {\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new THREE.Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new THREE.Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n\n        mesh.name = object.name;\n\n        container.add(mesh);\n      }\n\n      console.timeEnd('OBJLoader');\n\n      return container;\n    },\n  };\n\n  return OBJLoader;\n})();\n\nexport default OBJLoader;\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author paulirish / http://paulirish.com/\n */\nimport * as THREE from 'three';\n\nlet FirstPersonControls = function(object, domElement) {\n  this.object = object;\n  this.target = new THREE.Vector3(0, 0, 0);\n\n  this.domElement = domElement !== undefined ? domElement : document;\n\n  this.enabled = true;\n\n  this.movementSpeed = 1.0;\n  this.lookSpeed = 0.005;\n\n  this.lookVertical = true;\n  this.autoForward = false;\n\n  this.activeLook = true;\n\n  this.heightSpeed = false;\n  this.heightCoef = 1.0;\n  this.heightMin = 0.0;\n  this.heightMax = 1.0;\n\n  this.constrainVertical = false;\n  this.verticalMin = 0;\n  this.verticalMax = Math.PI;\n\n  this.autoSpeedFactor = 0.0;\n\n  this.mouseX = 0;\n  this.mouseY = 0;\n\n  this.lat = 0;\n  this.lon = 0;\n  this.phi = 0;\n  this.theta = 0;\n\n  this.moveForward = false;\n  this.moveBackward = false;\n  this.moveLeft = false;\n  this.moveRight = false;\n\n  this.mouseDragOn = false;\n\n  this.viewHalfX = 0;\n  this.viewHalfY = 0;\n\n  if (this.domElement !== document) {\n    this.domElement.setAttribute('tabindex', -1);\n  }\n\n  //\n\n  this.handleResize = function() {\n    if (this.domElement === document) {\n      this.viewHalfX = window.innerWidth / 2;\n      this.viewHalfY = window.innerHeight / 2;\n    } else {\n      this.viewHalfX = this.domElement.offsetWidth / 2;\n      this.viewHalfY = this.domElement.offsetHeight / 2;\n    }\n  };\n\n  this.onMouseDown = function(event) {\n    if (this.domElement !== document) {\n      this.domElement.focus();\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.activeLook) {\n      switch (event.button) {\n        case 0:\n          this.moveForward = true;\n          break;\n        case 2:\n          this.moveBackward = true;\n          break;\n      }\n    }\n\n    this.mouseDragOn = true;\n  };\n\n  this.onMouseUp = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.activeLook) {\n      switch (event.button) {\n        case 0:\n          this.moveForward = false;\n          break;\n        case 2:\n          this.moveBackward = false;\n          break;\n      }\n    }\n\n    this.mouseDragOn = false;\n  };\n\n  this.onMouseMove = function(event) {\n    if (this.domElement === document) {\n      this.mouseX = event.pageX - this.viewHalfX;\n      this.mouseY = event.pageY - this.viewHalfY;\n    } else {\n      this.mouseX = event.pageX - this.domElement.offsetLeft - this.viewHalfX;\n      this.mouseY = event.pageY - this.domElement.offsetTop - this.viewHalfY;\n    }\n  };\n\n  this.onKeyDown = function(event) {\n    //event.preventDefault();\n\n    switch (event.keyCode) {\n      case 38: /*up*/\n      case 87:\n        /*W*/ this.moveForward = true;\n        break;\n\n      case 37: /*left*/\n      case 65:\n        /*A*/ this.moveLeft = true;\n        break;\n\n      case 40: /*down*/\n      case 83:\n        /*S*/ this.moveBackward = true;\n        break;\n\n      case 39: /*right*/\n      case 68:\n        /*D*/ this.moveRight = true;\n        break;\n\n      case 82:\n        /*R*/ this.moveUp = true;\n        break;\n      case 70:\n        /*F*/ this.moveDown = true;\n        break;\n    }\n  };\n\n  this.onKeyUp = function(event) {\n    switch (event.keyCode) {\n      case 38: /*up*/\n      case 87:\n        /*W*/ this.moveForward = false;\n        break;\n\n      case 37: /*left*/\n      case 65:\n        /*A*/ this.moveLeft = false;\n        break;\n\n      case 40: /*down*/\n      case 83:\n        /*S*/ this.moveBackward = false;\n        break;\n\n      case 39: /*right*/\n      case 68:\n        /*D*/ this.moveRight = false;\n        break;\n\n      case 82:\n        /*R*/ this.moveUp = false;\n        break;\n      case 70:\n        /*F*/ this.moveDown = false;\n        break;\n    }\n  };\n\n  this.update = function(delta) {\n    if (this.enabled === false) return;\n\n    if (this.heightSpeed) {\n      var y = THREE.Math.clamp(\n        this.object.position.y,\n        this.heightMin,\n        this.heightMax,\n      );\n      var heightDelta = y - this.heightMin;\n\n      this.autoSpeedFactor = delta * (heightDelta * this.heightCoef);\n    } else {\n      this.autoSpeedFactor = 0.0;\n    }\n\n    var actualMoveSpeed = delta * this.movementSpeed;\n\n    if (this.moveForward || (this.autoForward && !this.moveBackward))\n      this.object.translateZ(-(actualMoveSpeed + this.autoSpeedFactor));\n    if (this.moveBackward) this.object.translateZ(actualMoveSpeed);\n\n    if (this.moveLeft) this.object.translateX(-actualMoveSpeed);\n    if (this.moveRight) this.object.translateX(actualMoveSpeed);\n\n    if (this.moveUp) this.object.translateY(actualMoveSpeed);\n    if (this.moveDown) this.object.translateY(-actualMoveSpeed);\n\n    var actualLookSpeed = delta * this.lookSpeed;\n\n    if (!this.activeLook) {\n      actualLookSpeed = 0;\n    }\n\n    var verticalLookRatio = 1;\n\n    if (this.constrainVertical) {\n      verticalLookRatio = Math.PI / (this.verticalMax - this.verticalMin);\n    }\n\n    this.lon += this.mouseX * actualLookSpeed;\n    if (this.lookVertical)\n      this.lat -= this.mouseY * actualLookSpeed * verticalLookRatio;\n\n    this.lat = Math.max(-85, Math.min(85, this.lat));\n    this.phi = THREE.Math.degToRad(90 - this.lat);\n\n    this.theta = THREE.Math.degToRad(this.lon);\n\n    if (this.constrainVertical) {\n      this.phi = THREE.Math.mapLinear(\n        this.phi,\n        0,\n        Math.PI,\n        this.verticalMin,\n        this.verticalMax,\n      );\n    }\n\n    var targetPosition = this.target,\n      position = this.object.position;\n\n    targetPosition.x =\n      position.x + 100 * Math.sin(this.phi) * Math.cos(this.theta);\n    targetPosition.y = position.y + 100 * Math.cos(this.phi);\n    targetPosition.z =\n      position.z + 100 * Math.sin(this.phi) * Math.sin(this.theta);\n\n    this.object.lookAt(targetPosition);\n  };\n\n  function contextmenu(event) {\n    event.preventDefault();\n  }\n\n  this.dispose = function() {\n    this.domElement.removeEventListener('contextmenu', contextmenu, false);\n    this.domElement.removeEventListener('mousedown', _onMouseDown, false);\n    this.domElement.removeEventListener('mousemove', _onMouseMove, false);\n    this.domElement.removeEventListener('mouseup', _onMouseUp, false);\n\n    window.removeEventListener('keydown', _onKeyDown, false);\n    window.removeEventListener('keyup', _onKeyUp, false);\n  };\n\n  var _onMouseMove = bind(this, this.onMouseMove);\n  var _onMouseDown = bind(this, this.onMouseDown);\n  var _onMouseUp = bind(this, this.onMouseUp);\n  var _onKeyDown = bind(this, this.onKeyDown);\n  var _onKeyUp = bind(this, this.onKeyUp);\n\n  this.domElement.addEventListener('contextmenu', contextmenu, false);\n  this.domElement.addEventListener('mousemove', _onMouseMove, false);\n  this.domElement.addEventListener('mousedown', _onMouseDown, false);\n  this.domElement.addEventListener('mouseup', _onMouseUp, false);\n\n  window.addEventListener('keydown', _onKeyDown, false);\n  window.addEventListener('keyup', _onKeyUp, false);\n\n  function bind(scope, fn) {\n    return function() {\n      fn.apply(scope, arguments);\n    };\n  }\n\n  this.handleResize();\n};\n\nexport default FirstPersonControls;\n"],"sourceRoot":""}